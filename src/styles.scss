:root {
  background: #dedede;
}

body {
  margin: 0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

svg {
  height: 100vh;
  fill: none;
  stroke: #000;
  stroke-width: 1;
  stroke-linecap: round;
  transform: rotate(-90deg);
  --start-minutes: 0;
  --start-hours: 11;
  --display--marks: block;
  --display--numbers: block;
  }

  circle {
    fill: white;
  }
  
  .marks {
    transform: translate(20px, 20px);
    stroke-width: 0.2;
  }
  
  .minute,
  .hour
  {
    transform: translate(20px, 20px) rotate(0deg);
    transition: transform 1s;
  }
  
  .minute {
    // transform: translate(20px, 20px) rotate(${props => 360 * props.hours + props.minutes * 6}deg);
    transform: translate(20px, 20px) rotate(60deg);
    stroke-width: 0.6;
  }
  
  .hour {
    // transform: translate(20px, 20px) rotate(${props => props.hours * 30 + props.minutes * .5}deg);
    transform: translate(20px, 20px) rotate(120deg);
    stroke-width: 1;
  }
  
  .tiaText {
    font-size: 1px;
    font-family: sans-serif;
    transform: translate(14px, 19px) rotate(90deg);
    fill: #dfdfdf;
    stroke: none;
  }
  
  /* numbers */
  .numbers {
    display: var(--display--numbers);
    transform: translate(20px, 20px) rotate(90deg);
  }
  
  .numbers text {
    text-anchor: middle;
    font-size: 3px;
    font-family: sans-serif;
    fill: black;
    stroke: none;
    transform: translate(0, -15px);
    
  }
  
  .numbers > g:nth-child(1) {
    transform: rotate(30deg);
  }
  
  .numbers > g:nth-child(2) {
    transform: rotate(calc(2 * 30deg));
  }
  
  .numbers > g:nth-child(3) {
    transform: rotate(calc(3 * 30deg));
  }
  
  .numbers > g:nth-child(4) {
    transform: rotate(calc(4 * 30deg));
  }
  .numbers > g:nth-child(5) {
    transform: rotate(calc(5 * 30deg));
  }
  
  .numbers > g:nth-child(6) {
    transform: rotate(calc(6 * 30deg));
  }
  
  .numbers > g:nth-child(7) {
    transform: rotate(calc(7 * 30deg));
  }
  
  .numbers > g:nth-child(8) {
    transform: rotate(calc(8 * 30deg));
  }
  
  .numbers > g:nth-child(9) {
    transform: rotate(calc(9 * 30deg));
  }
  
  .numbers > g:nth-child(10) {
    transform: rotate(calc(10 * 30deg));
  }
  
  .numbers > g:nth-child(11) {
    transform: rotate(calc(11 * 30deg));
  }
  .numbers > g:nth-child(12) {
    transform: rotate(calc(12 * 30deg));
  }
  
  
  
  .pin {
    stroke: black;
    stroke-width: 0.2;
  }
  
  
  /* marks */
  .marks {
    display: var(--display--marks);
  }
  
  .marks > line:nth-child(1) {
    transform: rotate(30deg);
  }
  
  .marks > line:nth-child(2) {
    transform: rotate(calc(2 * 30deg));
  }
  
  .marks > line:nth-child(3) {
    transform: rotate(calc(3 * 30deg));
    stroke-width: 0.5;
  }
  
  .marks > line:nth-child(4) {
    transform: rotate(calc(4 * 30deg));
  }
  .marks > line:nth-child(5) {
    transform: rotate(calc(5 * 30deg));
  }
  
  .marks > line:nth-child(6) {
    transform: rotate(calc(6 * 30deg));
    stroke-width: 0.5;
  }
  
  .marks > line:nth-child(7) {
    transform: rotate(calc(7 * 30deg));
  }
  
  .marks > line:nth-child(8) {
    transform: rotate(calc(8 * 30deg));
  }
  
  .marks > line:nth-child(9) {
    transform: rotate(calc(9 * 30deg));
    stroke-width: 0.5;
  }
  
  .marks > line:nth-child(10) {
    transform: rotate(calc(10 * 30deg));
  }
  
  .marks > line:nth-child(11) {
    transform: rotate(calc(11 * 30deg));
  }
  .marks > line:nth-child(12) {
    transform: rotate(calc(12 * 30deg));
    stroke-width: 0.5;
  }